"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const StorageUtil_1 = require("../../utils/StorageUtil");
const WordGroup_1 = require("../../beans/WordGroup");
const papaparse_1 = require("../../utils/papaparse");
var StateEnum;
(function (StateEnum) {
    StateEnum[StateEnum["WORD_UNFOLD_STATE"] = 0] = "WORD_UNFOLD_STATE";
    StateEnum[StateEnum["WORD_FOLD_STATE"] = 1] = "WORD_FOLD_STATE";
    StateEnum[StateEnum["ADD_GROUP_STATE"] = 2] = "ADD_GROUP_STATE";
    StateEnum[StateEnum["ADD_WORD_STATE"] = 3] = "ADD_WORD_STATE";
    StateEnum[StateEnum["BATCH_ADD_STATE"] = 4] = "BATCH_ADD_STATE";
})(StateEnum || (StateEnum = {}));
Page({
    data: {
        addGroupName: '',
        addWord: '',
        groupid: '',
        s: -1,
        wordGroupList: new Array(),
        State: StateEnum,
        curState: StateEnum.WORD_UNFOLD_STATE,
        preState: StateEnum.WORD_UNFOLD_STATE,
        selectData: [],
        textAreaCount: 0,
        textAreaValue: ''
    },
    onLoad() {
        this.flushPageData();
    },
    onShow() {
        this.flushPageData();
    },
    translateStateTo(nextState) {
        let preData = this.data.curState;
        this.setData({
            curState: nextState,
            preData: preData
        });
    },
    flushPageData() {
        let wordGroupList = StorageUtil_1.StorageUtil.getWordGroup();
        this.setData({
            wordGroupList: wordGroupList
        });
    },
    toAddGroup() {
        this.translateStateTo(StateEnum.ADD_GROUP_STATE);
    },
    saveAddGroup() {
        let wordGroup = new WordGroup_1.WordGroup();
        wordGroup.setCount(0);
        wordGroup.setName(this.data.addGroupName);
        StorageUtil_1.StorageUtil.addWordGroup(wordGroup);
        this.translateStateTo(StateEnum.WORD_UNFOLD_STATE);
        this.setData({
            addGroupName: ''
        });
        this.flushPageData();
    },
    cancelAddGroup() {
        this.translateStateTo(StateEnum.WORD_UNFOLD_STATE);
    },
    deleteGroup() {
    },
    saveDeleteGroup() {
        let that = this;
        wx.showModal({
            title: '提示',
            content: '确定删除吗？',
            success(res) {
                if (res.confirm) {
                    StorageUtil_1.StorageUtil.deleteWordGroup(new WordGroup_1.WordGroup());
                    that.translateStateTo(that.data.preState);
                    that.flushPageData();
                }
            }
        });
    },
    cancelDeleteGroup() {
        this.translateStateTo(this.data.preState);
    },
    addGroupNameChanged(e) {
        this.setData({
            addGroupName: e.detail.value
        });
    },
    selectChanged(e) {
        console.log(e.detail.value);
    },
    foldWordGroup(e) {
        let tapid = e.currentTarget.id;
        let groupid = this.data.groupid;
        if (groupid === tapid) {
            groupid = "";
            this.translateStateTo(StateEnum.WORD_UNFOLD_STATE);
        }
        else {
            groupid = tapid;
            this.translateStateTo(StateEnum.WORD_FOLD_STATE);
        }
        this.setData({
            groupid: groupid
        });
    },
    toAddWord() {
        this.translateStateTo(StateEnum.ADD_WORD_STATE);
    },
    addWordChanged(e) {
        this.setData({
            addWord: e.detail.value,
            groupid: e.currentTarget.id
        });
    },
    saveAddWord() {
        let wordGroup = new WordGroup_1.WordGroup();
        let word = this.data.addWord;
        wordGroup.setId(this.data.groupid);
        StorageUtil_1.StorageUtil.addWord(wordGroup, word);
        this.translateStateTo(StateEnum.WORD_FOLD_STATE);
        this.setData({
            addWord: ''
        });
        this.flushPageData();
    },
    toAddWords() {
        this.translateStateTo(StateEnum.BATCH_ADD_STATE);
    },
    cancelAddWord() {
        this.translateStateTo(StateEnum.WORD_FOLD_STATE);
        this.setData({
            addWord: ''
        });
    },
    textAreaInput(e) {
        this.setData({
            textAreaValue: e.detail.value,
            textAreaCount: e.detail.value.length
        });
    },
    saveAddWords() {
        let words = this.data.textAreaValue;
        let wordList = papaparse_1.parse(words).data;
        let wordGroup = new WordGroup_1.WordGroup();
        wordGroup.setId(this.data.groupid);
        for (let i = 0; i < wordList.length; i++) {
            for (let j = 0; j < wordList[i].length; j++) {
                let word = wordList[i][j];
                StorageUtil_1.StorageUtil.addWord(wordGroup, word);
            }
        }
        this.translateStateTo(StateEnum.WORD_FOLD_STATE);
        this.setData({
            textAreaCount: 0,
            textAreaValue: ''
        });
        this.flushPageData();
    },
    cancelAddWords() {
        this.translateStateTo(StateEnum.WORD_FOLD_STATE);
        this.setData({
            textAreaCount: 0,
            textAreaValue: ''
        });
    },
    toDeleteWordGroup() {
        wx.navigateTo({
            url: '../delete/delete'
        });
    },
    toDeleteWord() {
        let that = this;
        wx.navigateTo({
            url: '../delete/delete?groupid=' + that.data.groupid
        });
    },
    listen() {
        let that = this;
        wx.navigateTo({
            url: '../listen/listen?groupid=' + that.data.groupid
        });
        return false;
    },
    mean(e) {
        let word = e.currentTarget.id;
        let groupid = this.data.groupid;
        wx.navigateTo({
            url: '../mean/mean?groupid=' + groupid + '&word=' + word
        });
    },
    onShareAppMessage: function () {
        return {
            title: '每一次听写，为了离梦想更近一步',
            path: '/pages/index/index',
            imageUrl: "http://img1.ph.126.net/gtigWEVlA6XbXE9aFrB0ew==/2098114476501923011.jpg"
        };
    }
});
//# sourceMappingURL=data:application/json;base64,