"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function assert(condition, msg) {
    if (!condition) {
        throw new Error(msg ? "assertion failed: " + msg : "assertion failed");
    }
}
exports.assert = assert;
function getGlobal() {
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    var g;
    try {
        g = new Function("return this")();
    }
    catch (e) {
    }
    return g;
}
exports.getGlobal = getGlobal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFtQkEsU0FBZ0IsTUFBTSxDQUFDLFNBQWMsRUFBRSxHQUFZO0lBQ2xELElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0tBQ3ZFO0FBQ0YsQ0FBQztBQUpELHdCQUlDO0FBUUQsU0FBZ0IsU0FBUztJQUN4QixJQUFJLE9BQU8sSUFBSSxLQUFLLFdBQVcsRUFBRTtRQUNoQyxPQUFPLElBQUksQ0FBQztLQUNaO0lBQ0QsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLEVBQUU7UUFDbEMsT0FBTyxNQUFNLENBQUM7S0FDZDtJQUNELElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO1FBQ2xDLE9BQU8sTUFBTSxDQUFDO0tBQ2Q7SUFJRCxJQUFJLENBQU0sQ0FBQztJQUNYLElBQUk7UUFDSCxDQUFDLEdBQUcsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztLQUNsQztJQUFDLE9BQU8sQ0FBQyxFQUFFO0tBR1g7SUFDRCxPQUFPLENBQUMsQ0FBQztBQUNWLENBQUM7QUFyQkQsOEJBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwZXIgdXRpbGl0aWVzLlxuICpcbiAqIENvcHlyaWdodCAoQykgMjAxNSBNYXJ0aW4gUG9lbHN0cmFcbiAqIExpY2Vuc2U6IE1JVFxuICovXG5cbi8vIFdlIGRvbid0IHdhbnQgdG8gZGVwZW5kIG9uIHRoZSBmdWxsIE5vZGUuSlMgdHlwaW5ncywgYW5kIG9ubHkgdXNlIHRoaXMgdG9cbi8vIGRldGVjdCB0aGUgcHJlc2VuY2Ugb2YgTm9kZSwgd2Vid29ya2VyIG9yIGJyb3dzZXIgY29udGV4dCwgc28gZGVjbGFyZSBpdCBoZXJlLlxuZGVjbGFyZSB2YXIgZ2xvYmFsOiBhbnk7XG5kZWNsYXJlIHZhciBzZWxmOiBhbnk7XG5kZWNsYXJlIHZhciB3aW5kb3c6IGFueTtcblxuLyoqXG4gKiBUaHJvdyBhbiBFcnJvciB3aGVuIGdpdmVuIGNvbmRpdGlvbiBpcyBmYWxzZS5cbiAqXG4gKiBAcGFyYW0ge2FueX0gICAgY29uZGl0aW9uIENvbmRpdGlvbiwgbm8tb3Agd2hlbiB0cnV0aHksIGVycm9yIHRocm93biB3aGVuIGZhbHN5XG4gKiBAcGFyYW0ge3N0cmluZ30gbXNnICAgICAgIE9wdGlvbmFsIHRleHQgdG8gaW5jbHVkZSBpbiBlcnJvciBtZXNzYWdlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnQoY29uZGl0aW9uOiBhbnksIG1zZz86IHN0cmluZyk6IHZvaWQge1xuXHRpZiAoIWNvbmRpdGlvbikge1xuXHRcdHRocm93IG5ldyBFcnJvcihtc2cgPyBcImFzc2VydGlvbiBmYWlsZWQ6IFwiICsgbXNnIDogXCJhc3NlcnRpb24gZmFpbGVkXCIpO1xuXHR9XG59XG5cbi8qKlxuICogUmV0dXJuIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdCAoaWYgcG9zc2libGUpLlxuICpcbiAqIEByZXR1cm4ge2FueX0gUmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IChlLmcuIGB3aW5kb3dgLCBgZ2xvYmFsYCwgZXRjLiksXG4gKiAgICAgICAgICAgICAgIG9yIGB1bmRlZmluZWRgIGlmIGl0IGNvdWxkIG5vdCBiZSBkZXRlcm1pbmVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0R2xvYmFsKCk6IGFueSB7XG5cdGlmICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIikgeyAvLyBXZWJXb3JrZXJzXG5cdFx0cmV0dXJuIHNlbGY7XG5cdH1cblx0aWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHsgLy8gQnJvd3NlcnNcblx0XHRyZXR1cm4gd2luZG93O1xuXHR9XG5cdGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiKSB7IC8vIFNlcnZlcnNpZGUgKE5vZGUpXG5cdFx0cmV0dXJuIGdsb2JhbDtcblx0fVxuXHQvLyBPdGhlcndpc2UsIHRyeSB0byB1c2UgYHRoaXNgLlxuXHQvLyBXZSB1c2UgZXZhbC1saWtlIGJlaGF2aW9yLCBiZWNhdXNlIGl0IHdpbGwgbm90IGluaGVyaXQgb3VyIFwidXNlIHN0cmljdFwiLFxuXHQvLyBzZWUgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMjc3MTgyL2hvdy10by1nZXQtdGhlLWdsb2JhbC1vYmplY3QtaW4tamF2YXNjcmlwdFxuXHRsZXQgZzogYW55O1xuXHR0cnkge1xuXHRcdGcgPSBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0Ly8gQ29udGVudCBTZWN1cml0eSBQb2xpY3kgbWlnaHQgbm90IGFsbG93IHRoZSBldmFsKCktZXZpbG5lc3MgYWJvdmUsXG5cdFx0Ly8gc28ganVzdCBpZ25vcmUgdGhlbi4uLlxuXHR9XG5cdHJldHVybiBnO1xufVxuIl19